version: '3.0'
services:
  db:
    image: "${POSTGRES_IMAGE}"
    deploy:
      resources:
        limits:
          memory: 200M
        reservations:
          memory: 100M
    ports:
      - "${HOST_DB_PORT}:5432"
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - /var/pgdata/team${TEAM_ID}-${ENVIRONMENT}:/var/lib/postgresql/data
  #    logging:
  #      driver: "awslogs"
  #      options:
  #        awslogs-create-group: "true"
  #        awslogs-region: "ap-south-1"
  #        awslogs-group: "${ENVIRONMENT}-skyfox-log-group"

  web:
    image: "${BOOKING_IMAGE}"
    deploy:
      resources:
        limits:
          memory: 250M
        reservations:
          memory: 150M
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USERNAME=${POSTGRES_USERNAME}
      - DB_NAME=${DB_NAME}
      - UI_HOST=${UI_HOST}
      - MOVIE_SERVICE_HOST=${MOVIE_SERVICE_HOST}
    healthcheck:
      test: ["CMD-SHELL", "/bin/bash", "/healthcheck.sh", "localhost", "${BACKEND_PORT}", "${VERSION}"]
      interval: 10s
      timeout: 30s
      retries: 3
    links:
      - db
    ports:
      - "${BACKEND_PORT}:8080"
#    logging:
#      driver: "awslogs"
#      options:
#        awslogs-region: "ap-south-1"
#        awslogs-create-group: "true"
#        awslogs-group: "catalyst-log-group"
#        awslogs-stream-prefix: "${ENVIRONMENT}-catalyst"
networks:
  default:
    external:
      name: skyfox-${ENVIRONMENT}