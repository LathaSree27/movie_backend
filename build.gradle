plugins {
    id 'java'
    id 'org.springframework.boot' version '2.1.5.RELEASE'
    id 'io.spring.dependency-management' version '1.0.7.RELEASE'
}

group 'org.example'
version '1.0-SNAPSHOT'
sourceCompatibility = '11'

logger.info('1. System.env.CI_COMMIT_SHORT_SHA : ', System.env.CI_COMMIT_SHORT_SHA )
logger.info('2. System.env.CI_COMMIT_SHORT_SHA : ', System.getenv("CI_COMMIT_SHORT_SHA") )

if (System.getenv("CI_COMMIT_SHORT_SHA")) {
     String versionWithTag = "${appVersion}-${System.getenv("CI_COMMIT_SHORT_SHA")}"
    logger.info("Setting version to {}", versionWithTag)
    version versionWithTag
}

logger.info("Setting version to {}", version)

repositories {
    mavenCentral()
}

bootJar {
    manifest {
        attributes "Implementation-Title": "Gradle"
        attributes "Implementation-Version": version
    }
}

tasks.withType(Test) {
    testLogging {
        events "standardOut", "started", "passed", "skipped", "failed"
    }
}
test {
    testLogging.showStandardStreams = true
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile 'org.postgresql:postgresql:42.2.5'

    compile 'org.flywaydb:flyway-core'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: "junit", module: "junit"
    }
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
    testImplementation 'org.springframework.security:spring-security-test'
    testCompile("com.h2database:h2")

    components {
        withModule('org.springframework:spring-beans') {
            allVariants {
                withDependencyConstraints {
                    // Need to patch constraints because snakeyaml is an optional dependency
                    it.findAll { it.name == 'snakeyaml' }.each { it.version { strictly '1.19' } }
                }
            }
        }
    }
}

