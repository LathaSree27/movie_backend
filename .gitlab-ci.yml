variables:
  CLUSTER_NAME: ec2-catalyst-cluster-ci
  CLUSTER_PROFILE_NAME: ec2-catalyst-cluster-profile-ci
  CLUSTER_CONFIG_NAME: ec2-catalyst-cluster-config-ci
  BOOKING_IMAGE_NAME: $CI_REGISTRY_IMAGE/bookingapi
  POSTGRES_IMAGE_NAME: $CI_REGISTRY_IMAGE/postgres

stages:
  - test
  - build
  - package
  - deploy-integration
  - promote-staging
  - deploy-staging
  - promote-prod
  - deploy-prod

test:
  image: gradle:5.3.0-jdk11
  stage: test
  script:
    - ./gradlew test
  artifacts:
    expire_in: 1 week
    paths:
      - build
      - .gradle
  only:
    - master

build:
  image: gradle:5.3.0-jdk11
  stage: build
  script: ./gradlew --build-cache --info bootjar
  artifacts:
    expire_in: 1 week
    paths:
      - build
      - .gradle
  only:
    - master

package:
  image: docker:latest
  stage: package
  services:
    - docker:dind
  environment:
    name: integration
  script:
    - export $(cat gradle.properties | grep appVersion)
    - export BOOKING_IMAGE=$BOOKING_IMAGE_NAME:$CI_COMMIT_SHORT_SHA-$CI_ENVIRONMENT_SLUG
    - export POSTGRES_IMAGE=$POSTGRES_IMAGE_NAME:$CI_COMMIT_SHORT_SHA-$CI_ENVIRONMENT_SLUG
    - echo "image info - $BOOKING_IMAGE $POSTGRES_IMAGE"
    - docker -v login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD registry.gitlab.com
    - docker build -t $BOOKING_IMAGE . --no-cache --build-arg VERSION="$appVersion-$CI_COMMIT_SHORT_SHA"
    - docker pull $POSTGRES_IMAGE_NAME
    - docker tag $POSTGRES_IMAGE_NAME $POSTGRES_IMAGE
    - docker push $BOOKING_IMAGE
    - docker push $POSTGRES_IMAGE
  only:
    - master

deploy-integration:
  image: registry.gitlab.com/gitlab-org/cloud-deploy
  stage: deploy-integration
  environment:
    name: integration
  script:
    - echo "image info - $BOOKING_IMAGE_NAME $POSTGRES_IMAGE_NAME $CI_ENVIRONMENT_SLUG $CI_COMMIT_SHORT_SHA"
    - ./deploy.sh $BOOKING_IMAGE_NAME $POSTGRES_IMAGE_NAME $CI_COMMIT_SHORT_SHA $CI_ENVIRONMENT_SLUG
  only:
    - master

promote-staging:
  image: docker:latest
  stage: promote-staging
  when: manual
  variables:
    PROMOTE_FROM: integration
  services:
    - docker:dind
  environment:
    name: staging
  script:
    - ./promote.sh $PROMOTE_FROM
  only:
    - master

deploy-staging:
  image: registry.gitlab.com/gitlab-org/cloud-deploy
  stage: deploy-staging
  environment:
    name: staging
  when: manual
  script:
    - echo "image info - $BOOKING_IMAGE_NAME $POSTGRES_IMAGE_NAME $CI_ENVIRONMENT_SLUG $CI_COMMIT_SHORT_SHA"
    - ./deploy.sh $BOOKING_IMAGE_NAME $POSTGRES_IMAGE_NAME $CI_COMMIT_SHORT_SHA $CI_ENVIRONMENT_SLUG
  only:
    - master

promote-prod:
  image: docker:latest
  stage: promote-prod
  when: manual
  variables:
    PROMOTE_FROM: staging
  services:
    - docker:dind
  environment:
    name: prod
  script:
    - ./promote.sh $PROMOTE_FROM
  only:
    - master

deploy-prod:
  image: registry.gitlab.com/gitlab-org/cloud-deploy
  stage: deploy-prod
  environment:
    name: prod
  when: manual
  script:
    - echo "image info - $BOOKING_IMAGE_NAME $POSTGRES_IMAGE_NAME $CI_ENVIRONMENT_SLUG $CI_COMMIT_SHORT_SHA"
    - ./deploy.sh $BOOKING_IMAGE_NAME $POSTGRES_IMAGE_NAME $CI_COMMIT_SHORT_SHA $CI_ENVIRONMENT_SLUG
  only:
    - master
